# Get array of performance metrics
# Each array element is a hash with following key,values pairs:
#  name: Performance metric's name
#  regex: regular expression used to capture perf metric value
#  units: Performance metric's units
#  adj: Optional hash used to escale capture value to appropriate units.
#       The adj is a hash with following keys:
#        val_index: index of capture value in regex above
#        unit_index: index of capture units in regex above
#        val_adj: hash of regex:val. The capture unit value will be check agains regex key, if match value is adjusted by val.
def get_metrics
  perf_metrics = [
   {'name' => 'bw_mem-rd-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+rd\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-wr-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+wr\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-rdwr-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+rdwr\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-cp-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+cp\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-fwr-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+fwr\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-frd-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+frd\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-fcp-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+fcp\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-bzero-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+bzero\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mem-bcopy-1MB',
    'regex' => '^\|TEST START\|bw_mem\|.+?Operation\s+\-\s+bcopy\|.+?Memory Blk Size\s+\-\s+1\s+MB\|.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'MB/s',
   },
   {'name' => 'bw_unix',
    'regex' => '^\|TEST START\|bw_unix\|.+?AF_UNIX\s+sock\s+stream\s+bandwidth:\s+([\d\.]+)\s+[\w\/]+',
    'units' => 'MB/s',
   },
   {'name' => 'bw_file_rd-o2c-1MB',
    'regex' => '^\|TEST START\|bw_file_rd\|.+?Size\s+\-\s+1MB.+?open2close.+?[\d\.]+\s+([\d\.]+).+?\|bw_file_rd\|',
    'units' => 'MB/s',
   },
   {'name' => 'bw_file_rd-io-1MB',
    'regex' => '^\|TEST START\|bw_file_rd\|.+?Size\s+\-\s+1MB.+?io_only.+?[\d\.]+\s+([\d\.]+).+?\|bw_file_rd\|',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mmap_rd-o2c-1MB',
    'regex' => '^\|TEST START\|bw_mmap_rd\|.+?Size\s+\-\s+1MB.+?open2close.+?[\d\.]+\s+([\d\.]+).+?\|bw_mmap_rd\|',
    'units' => 'MB/s',
   },
   {'name' => 'bw_mmap_rd-mo-1MB',
    'regex' => '^\|TEST START\|bw_mmap_rd\|.+?Size\s+\-\s+1MB.+?mmap_only.+?[\d\.]+\s+([\d\.]+).+?\|bw_mmap_rd\|',
    'units' => 'MB/s',
   },
   {'name' => 'bw_pipe',
    'regex' => '^\|TEST START\|bw_pipe\|.+?Pipe\s+bandwidth:\s+([\d\.]+)\s+[\w\/]+',
    'units' => 'MB/s',
   },
   {'name' => 'lat_connect',
    'regex' => '^\|TEST START\|lat_connect\|.+?TCP\/IP\s+connection\s+cost\s+to\s+localhost:\s+([\d\.]+)\s+([\w\/]+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_fs-0k',
    'regex' => '^\|TEST START\|lat_fs\|.+?0k\s+([\d\.]+)',
    'units' => 'num_files',
   },
   {'name' => 'lat_fs-1k',
    'regex' => '^\|TEST START\|lat_fs\|.+?1k\s+([\d\.]+)',
    'units' => 'num_files',
   },
   {'name' => 'lat_fs-4k',
    'regex' => '^\|TEST START\|lat_fs\|.+?4k\s+([\d\.]+)',
    'units' => 'num_files',
   },
   {'name' => 'lat_fs-10k',
    'regex' => '^\|TEST START\|lat_fs\|.+?10k\s+([\d\.]+)',
    'units' => 'num_files',
   },
   {'name' => 'lat_ctx-2-128K',
    'regex' => '^\|TEST START\|lat_ctx\|.+?procs\s+\-\s+2\|.{1,2}\|TRACE\sLOG\|\s+?size_in_kbytes\s+\-\s+128K.+?size=.+?ovr=[\d\.]+.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'us',
   },
   {'name' => 'lat_ctx-2-256K',
    'regex' => '^\|TEST START\|lat_ctx\|.+?procs\s+\-\s+2\|.{1,2}\|TRACE\sLOG\|\s+?size_in_kbytes\s+\-\s+256K.+?size=.+?ovr=[\d\.]+.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'us',
   },
   {'name' => 'lat_ctx-4-128K',
    'regex' => '^\|TEST START\|lat_ctx\|.+?procs\s+\-\s+4\|.{1,2}\|TRACE\sLOG\|\s+?size_in_kbytes\s+\-\s+128K.+?size=.+?ovr=[\d\.]+.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'us',
   },
   {'name' => 'lat_ctx-4-256K',
    'regex' => '^\|TEST START\|lat_ctx\|.+?procs\s+\-\s+4\|.{1,2}\|TRACE\sLOG\|\s+?size_in_kbytes\s+\-\s+256K.+?size=.+?ovr=[\d\.]+.+?[\d\.]+\s+([\d\.]+)',
    'units' => 'us',
   },
   {'name' => 'lat_mem_rd-stride128-sz50',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.{1,2}0.00049\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mem_rd-stride128-sz31K',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.+?0.03125\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mem_rd-stride128-sz62K',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.+?0.06250\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mem_rd-stride128-sz125K',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.+?0.12500\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mem_rd-stride128-sz250K',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.+?0.25000\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mem_rd-stride128-sz500K',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.+?0.50000\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mem_rd-stride128-sz1000K',
    'regex' => '^\|TEST START\|lat_mem_rd\|.+?stride=128.+?1.00000\s+([\d\.]+).+?\|TEST\sEND\|lat_mem_rd\|',
    'units' => 'ns',
   },
   {'name' => 'lat_mmap-1M',
    'regex' => '^\|TEST START\|lat_mmap\|.+?1.000000\s+([\d\.]+)',
    'units' => 'us',
   },
   {'name' => 'lat_ops-int-bit',
    'regex' => '^integer\sbit:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int-add',
    'regex' => '^integer\sadd:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int-mul',
    'regex' => '^integer\smul:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int-div',
    'regex' => '^integer\sdiv:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int-mod',
    'regex' => '^integer\smod:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int64-bit',
    'regex' => '^int64\sbit:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int64-add',
    'regex' => '^uint64\sadd:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int64-mul',
    'regex' => '^int64\smul:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int64-div',
    'regex' => '^int64\sdiv:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-int64-mod',
    'regex' => '^int64\smod:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-float-add',
    'regex' => '^float\sadd:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-float-mul',
    'regex' => '^float\smul:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-float-div',
    'regex' => '^float\sdiv:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-double-add',
    'regex' => '^double\sadd:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-double-mul',
    'regex' => '^double\smul:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_ops-double-div',
    'regex' => '^double\sdiv:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 1.0, /micro/ => 1000.0}},
    'units' => 'ns',
   },
   {'name' => 'lat_pagefault',
    'regex' => '^\|TEST\sSTART\|lat_pagefault\|.+?Pagefaults\son\s.+?:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_pipe',
    'regex' => '^\|TEST\sSTART\|lat_pipe\|.+?Pipe\s+latency:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_proc-fork',
    'regex' => '^\|TEST\sSTART\|lat_proc\|.+?Process\s+fork\+exit:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_proc-exec',
    'regex' => '^\|TEST\sSTART\|lat_proc\|.+?Process\s+fork\+execve:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_proc-procCall',
    'regex' => '^Procedure\scall:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_sem',
    'regex' => '^Semaphore\slatency:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_tcp',
    'regex' => '^TCP\slatency\susing\slocalhost:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_select',
    'regex' => '^Select\son\s200\stcp\sfd\'s:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_sig-install',
    'regex' => '^Signal\shandler\sinstallation:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_sig-catch',
    'regex' => '^Signal\shandler\soverhead:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_sig-prot',
    'regex' => '^Protection\sfault:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_unix',
    'regex' => '^AF_UNIX\ssock\sstream\slatency:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_syscall-fstat',
    'regex' => '^Simple\sfstat:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_syscall-stat',
    'regex' => '^Simple\sstat:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_syscall-open',
    'regex' => '^Simple\sopen\/close:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_syscall-write',
    'regex' => '^Simple\swrite:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_syscall-read',
    'regex' => '^Simple\sread:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
   {'name' => 'lat_syscall-null',
    'regex' => '^Simple\ssyscall:\s+([\d\.]+)\s+(\w+)',
    'adj' => {'val_index' => 0, 'units_index' => 1, 'val_adj' => {/nano/ => 0.001, /micro/ => 1.0, /mili/ => 1000.0}},
    'units' => 'us',
   },
  ]
  perf_metrics
end
