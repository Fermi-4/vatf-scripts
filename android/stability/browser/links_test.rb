require File.dirname(__FILE__)+'/../../android_test_module'
require File.dirname(__FILE__)+'/../../webdriver_module' 
 
include AndroidTest
include WatirWebDriver

def run
  test_completed=false
  starting_sites=@test_params.params_control.starting_sites
  num_links_to_follow=@test_params.params_control.num_links_to_follow[0].to_i
  wait_time=@test_params.params_control.wait_time[0].to_i
  log_data "Creating Webdriver client"
  #browser = Watir::Browser.new(:remote, :url=>'http://localhost:8080/hub')   # For running on Android DUT
  browser = Watir::Browser.new()        # For running on Firefox in local PC
  WatirWebDriver.wait_timeout = 10      # Wait up to 10 seconds to load a page
  starting_sites.each do |site|
    log_data "Opening page: #{site}"
    browser.goto site
    num_links_to_follow.times do
      sleep wait_time if wait_time > 0
      index = rand(browser.links.length)
      if index > 0
        begin
          log_data "Opening link: #{browser.link(:index, index).href}"
          WatirWebDriver.wait_until { browser.link(:index, index).present? }
          browser.link(:index, index).click
        rescue Exception => e
          log_data "Ignoring exception generated by last link. \n Exception Message=#{e.message}"
          # Ignore and keep going
        end
      else
        break  # No links to follow
      end
    end
  end
  test_completed=true
  log_data "Test Completed!!!"
   ensure
    if test_completed
      set_result(FrameworkConstants::Result[:pass], 'Test Passed')
    else
      set_result(FrameworkConstants::Result[:fail], 'Test Failed. At least one link did not load properly')
    end
end


def log_data(data)
  puts data
  @results_html_file.add_paragraph(data,nil,nil,nil)
end









